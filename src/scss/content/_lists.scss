@use "../../../node_modules/ucla-design-systems/scss/utilities/variables" as design-system-vars;

// CSS Var(s).
:root {
  --icon-external-link: url('data:image/svg+xml,\<svg width="18" height="18" viewBox="0 0 18 18" xmlns="http://www.w3.org/2000/svg"><path fill="%2300598C" d="M16 16L2 16L2 2L9 2V0L2 0C0.89 0 0 0.9 0 2L0 16C0 17.1 0.89 18 2 18L16 18C17.1 18 18 17.1 18 16L18 9L16 9V16ZM11 0V2L14.59 2L4.76 11.83L6.17 13.24L16 3.41L16 7H18V0L11 0Z"></path></svg>');
  --icon-internal-link: url('data:image/svg+xml,\<svg width="24" height="24" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path fill="%2300598C" d="M12 20L10.575 18.6L16.175 13L4 13L4 11L16.175 11L10.575 5.4L12 4L20 12L12 20Z"/></svg>');
}

// Lists.
@mixin bulletList() {
  list-style-type: square;

  li::marker {
    color: design-system-vars.$ucla-blue;
  }

  ul {
    list-style-type: square;
  }
}

// List Reset.
@mixin listReset() {
  margin: 0;
  padding: 0;
  list-style: none;

  li + li {
    margin: 0
  }
}

// TODO: Decide if we are going to override design system default list style.
// ul {
//   @include bulletList();
// }

.list {

  &--bullet {
    @include bulletList();
  }

  &--pipe {
    margin: 0 0 1rem;

    :where(li) {
      display: inline-block;
      margin-top: 0;
      margin-right: .75rem;
      padding-right: .5rem;
      border-right: 1px solid design-system-vars.$grey-40;
      line-height: 1;

      &:last-child {
        border: 0;
      }
    }
  }

  &--link {
    @include listReset();

    li {

      a {
        display: flex;
        justify-content: space-between;
        padding: 1rem;
        border-bottom: 1px solid design-system-vars.$grey-10;
        color: design-system-vars.$default-state;
        cursor: pointer;
        font-weight: bold;
        text-decoration: none;

        &:visited {
          color: design-system-vars.$default-state;
        }
      }

      &:hover a {
        background-color: design-system-vars.$hover-state;
        color: design-system-vars.$white;
      }
    }

    li:first-child {
      a {
        border-top: 1px solid design-system-vars.$grey-10;
      }
    }
  }

  &--link-indicator {
    li {

      a {
        &:after {
          height: 1.3rem;
          padding-right: 1.5rem;
          background: var(--icon-internal-link) no-repeat;
          content: "";
        }

        &[href^="http"]:after {
          background: var(--icon-external-link) no-repeat;
        }
      }

      &:hover a {
        &:after {
          filter: brightness(0) invert(1);
        }
      }
    }
  }

  &--flush {
    @include listReset();

    li,
    li+li {
      margin-bottom: 1rem;
    }
  }

  &--lower-alpha {
    list-style-type: lower-alpha;

    :where(li)::marker {
      color: design-system-vars.$ucla-blue;
    }

    &:not([type]) {
      list-style-type: lower-alpha;

      :where(ol):not([type]) {
        list-style-type: lower-alpha;
      }
    }
  }

  &--upper-alpha {
    list-style-type: upper-alpha;

    :where(li)::marker {
      color: design-system-vars.$ucla-blue;
    }

    &:not([type]) {
      list-style-type: upper-alpha;

      :where(ol):not([type]) {
        list-style-type: upper-alpha;
      }
    }
  }

  &--lower-roman {
    list-style-type: lower-roman;

    :where(li)::marker {
      color: design-system-vars.$ucla-blue;
    }

    &:not([type]) {
      list-style-type: lower-roman;

      :where(ol):not([type]) {
        list-style-type: lower-roman;
      }
    }
  }

  &--upper-roman {
    list-style-type: upper-roman;

    :where(li)::marker {
      color: design-system-vars.$ucla-blue;
    }

    &:not([type]) {
      list-style-type: upper-roman;

      :where(ol):not([type]) {
        list-style-type: upper-roman;
      }
    }
  }

  &--alpha-numeric-roman {
    list-style-type: upper-alpha;

    :where(li)::marker {
      color: design-system-vars.$ucla-blue;
    }

    &:not([type]) {
      list-style-type: upper-alpha;

      :where(ol):not([type]) {
        list-style-type: decimal;

        :where(ol):not([type]) {
          list-style-type: lower-alpha;

          /* stylelint-disable */
          // Allow nesting depth greater than 4 in this one instance.
          :where(ol):not([type]) {
            list-style-type: lower-roman;
          }
          /* stylelint-enable */
        }
      }
    }
  }
}
